{"ast":null,"code":"var _jsxFileName = \"/home/edyta/react/onClickMarker/map-app/src/map.js\";\nimport React from \"react\";\nimport InteractiveMap, { Marker } from \"react-map-gl\";\nimport Pin from './pin';\n/**\n * Note you have to pass a child to <Marker />\n * as it just places an element at the correct\n * position.\n */\n\nfunction Maps() {\n  /**\n   * Store marker locations in state\n   * On click, grab the lngLat from the event\n   * and add it to the state.\n   */\n  const [markers, setMarkers] = React.useState([]);\n\n  const handleClick = ({\n    lngLat: [longitude, latitude]\n  }) => setMarkers(markers => [...markers, {\n    longitude,\n    latitude\n  }]);\n  /**\n   * Manage viewport in state\n   */\n\n\n  const [viewport, setViewport] = React.useState({\n    latitude: 60.4,\n    longitude: 4.8,\n    zoom: 10\n  });\n  return /*#__PURE__*/React.createElement(InteractiveMap // onClick, capture the pointer event so we can\n  // get the lngLat of the click.\n  , Object.assign({\n    onClick: handleClick // required for interactivity\n    ,\n    mapStyle: \"mapbox://styles/ebredla/ckckctgmr4u571jo5628ll2gq\",\n    width: \"100vw\",\n    height: \"100vh\",\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZWJyZWRsYSIsImEiOiJjam5jeTJtenUwMjYwM3BvNGUyNW1jZWdhIn0.-tQzgIVEIdLKqbTKsy4NXg\",\n    onViewportChange: viewport => setViewport(viewport)\n  }, viewport, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), markers.length ? markers.map((m, i) =>\n  /*#__PURE__*/\n  // <Marker /> just places its children at the right lat lng.\n  React.createElement(Marker, Object.assign({}, m, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Pin, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }))) : null);\n}\n\nexport default Maps;","map":{"version":3,"sources":["/home/edyta/react/onClickMarker/map-app/src/map.js"],"names":["React","InteractiveMap","Marker","Pin","Maps","markers","setMarkers","useState","handleClick","lngLat","longitude","latitude","viewport","setViewport","zoom","length","map","m","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,IAAwBC,MAAxB,QAAqC,cAArC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;;;;;;AAMA,SAASC,IAAT,GAAgB;AACd;;;;;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA9B;;AACA,QAAMC,WAAW,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE,CAACC,SAAD,EAAYC,QAAZ;AAAV,GAAD,KAClBL,UAAU,CAACD,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAa;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAb,CAAZ,CADZ;AAGA;;;;;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACO,QAAN,CAAe;AAC7CI,IAAAA,QAAQ,EAAE,IADmC;AAE7CD,IAAAA,SAAS,EAAE,GAFkC;AAG7CI,IAAAA,IAAI,EAAE;AAHuC,GAAf,CAAhC;AAMA,sBACE,oBAAC,cAAD,CACE;AACA;AAFF;AAGE,IAAA,OAAO,EAAEN,WAHX,CAIE;AAJF;AAME,IAAA,QAAQ,EAAC,mDANX;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,MAAM,EAAC,OART;AASE,IAAA,oBAAoB,EAAC,2FATvB;AAWE,IAAA,gBAAgB,EAAEI,QAAQ,IAAIC,WAAW,CAACD,QAAD;AAX3C,KAYMA,QAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcGP,OAAO,CAACU,MAAR,GACGV,OAAO,CAACW,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ;AAAA;AACV;AACA,sBAAC,MAAD,oBAAYD,CAAZ;AAAe,IAAA,GAAG,EAAEC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACG,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFF,CADH,GAOG,IArBN,CADF;AAyBD;;AAED,eAAed,IAAf","sourcesContent":["import React from \"react\";\nimport InteractiveMap, {Marker} from \"react-map-gl\";\nimport Pin from './pin';\n\n/**\n * Note you have to pass a child to <Marker />\n * as it just places an element at the correct\n * position.\n */\n\nfunction Maps() {\n  /**\n   * Store marker locations in state\n   * On click, grab the lngLat from the event\n   * and add it to the state.\n   */\n  const [markers, setMarkers] = React.useState([]);\n  const handleClick = ({ lngLat: [longitude, latitude] }) =>\n    setMarkers(markers => [...markers, { longitude, latitude }]);\n\n  /**\n   * Manage viewport in state\n   */\n  const [viewport, setViewport] = React.useState({\n    latitude: 60.4,\n    longitude: 4.8,\n    zoom: 10,\n  });\n\n  return (\n    <InteractiveMap\n      // onClick, capture the pointer event so we can\n      // get the lngLat of the click.\n      onClick={handleClick}\n      // required for interactivity\n      \n      mapStyle=\"mapbox://styles/ebredla/ckckctgmr4u571jo5628ll2gq\"\n      width=\"100vw\"\n      height=\"100vh\"\n      mapboxApiAccessToken=\"pk.eyJ1IjoiZWJyZWRsYSIsImEiOiJjam5jeTJtenUwMjYwM3BvNGUyNW1jZWdhIn0.-tQzgIVEIdLKqbTKsy4NXg\"\n      \n      onViewportChange={viewport => setViewport(viewport)}\n      {...viewport}\n    >\n      {markers.length\n        ? markers.map((m, i) => (\n            // <Marker /> just places its children at the right lat lng.\n            <Marker {...m} key={i} >\n               <Pin size={20} />\n            </Marker>\n          ))\n        : null}\n    </InteractiveMap>\n  );\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}