{"ast":null,"code":"var _jsxFileName = \"/home/edyta/react/onClickMarker/map-app/src/map.js\";\nimport React from \"react\";\nimport InteractiveMap, { Marker } from \"react-map-gl\";\nimport L from \"leaflet\";\n/**\n * Note you have to pass a child to <Marker />\n * as it just places an element at the correct\n * position.\n */\n\nfunction Maps() {\n  /**\n   * Store marker locations in state\n   * On click, grab the lngLat from the event\n   * and add it to the state.\n   */\n  const [markers, setMarkers] = React.useState([]);\n\n  const handleClick = ({\n    lngLat: [longitude, latitude]\n  }) => setMarkers(markers => [...markers, {\n    longitude,\n    latitude\n  }]);\n\n  const icon = L.icon({\n    iconSize: [25, 41],\n    iconAnchor: [10, 41],\n    popupAnchor: [2, -40],\n    iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\n    shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\n  });\n  /**\n   * Manage viewport in state\n   */\n\n  const [viewport, setViewport] = React.useState({\n    latitude: 51,\n    longitude: 19,\n    zoom: 5\n  });\n  return /*#__PURE__*/React.createElement(InteractiveMap // onClick, capture the pointer event so we can\n  // get the lngLat of the click.\n  , Object.assign({\n    onClick: handleClick // required for interactivity\n    ,\n    mapStyle: \"mapbox://styles/ebredla/ckckctgmr4u571jo5628ll2gq\",\n    width: \"100vw\",\n    height: \"100vh\",\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZWJyZWRsYSIsImEiOiJjam5jeTJtenUwMjYwM3BvNGUyNW1jZWdhIn0.-tQzgIVEIdLKqbTKsy4NXg\",\n    onViewportChange: viewport => setViewport(viewport)\n  }, viewport, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), markers.length ? markers.map((m, i) =>\n  /*#__PURE__*/\n  // <Marker /> just places its children at the right lat lng.\n  React.createElement(Marker, Object.assign({}, m, {\n    key: i,\n    icon: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), `Clicked here: \\n ${m.longitude}, ${m.latitude}`)) : null);\n}\n\nexport default Maps;","map":{"version":3,"sources":["/home/edyta/react/onClickMarker/map-app/src/map.js"],"names":["React","InteractiveMap","Marker","L","Maps","markers","setMarkers","useState","handleClick","lngLat","longitude","latitude","icon","iconSize","iconAnchor","popupAnchor","iconUrl","shadowUrl","viewport","setViewport","zoom","length","map","m","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,IAAyBC,MAAzB,QAAuC,cAAvC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA;;;;;;AAMA,SAASC,IAAT,GAAgB;AACd;;;;;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA9B;;AACA,QAAMC,WAAW,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE,CAACC,SAAD,EAAYC,QAAZ;AAAV,GAAD,KAClBL,UAAU,CAACD,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAa;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAb,CAAZ,CADZ;;AAEF,QAAMC,IAAI,GAAGT,CAAC,CAACS,IAAF,CAAO;AAClBC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CADQ;AAElBC,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAFM;AAGlBC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CAHK;AAIlBC,IAAAA,OAAO,EAAE,2DAJS;AAKlBC,IAAAA,SAAS,EAAE;AALO,GAAP,CAAb;AAOE;;;;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,KAAK,CAACO,QAAN,CAAe;AAC7CI,IAAAA,QAAQ,EAAE,EADmC;AAE7CD,IAAAA,SAAS,EAAE,EAFkC;AAG7CU,IAAAA,IAAI,EAAE;AAHuC,GAAf,CAAhC;AAMA,sBACE,oBAAC,cAAD,CACE;AACA;AAFF;AAGE,IAAA,OAAO,EAAEZ,WAHX,CAIE;AAJF;AAME,IAAA,QAAQ,EAAC,mDANX;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,MAAM,EAAC,OART;AASE,IAAA,oBAAoB,EAAC,2FATvB;AAWE,IAAA,gBAAgB,EAAEU,QAAQ,IAAIC,WAAW,CAACD,QAAD;AAX3C,KAYMA,QAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcGb,OAAO,CAACgB,MAAR,GACGhB,OAAO,CAACiB,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ;AAAA;AACV;AACA,sBAAC,MAAD,oBAAYD,CAAZ;AAAe,IAAA,GAAG,EAAEC,CAApB;AAAuB,IAAA,IAAI,EAAEZ,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,oBAAmBW,CAAC,CAACb,SAAU,KAAIa,CAAC,CAACZ,QAAS,EADlD,CAFF,CADH,GAOG,IArBN,CADF;AAyBD;;AAED,eAAeP,IAAf","sourcesContent":["import React from \"react\";\nimport InteractiveMap, { Marker } from \"react-map-gl\";\nimport L from \"leaflet\";\n/**\n * Note you have to pass a child to <Marker />\n * as it just places an element at the correct\n * position.\n */\n\nfunction Maps() {\n  /**\n   * Store marker locations in state\n   * On click, grab the lngLat from the event\n   * and add it to the state.\n   */\n  const [markers, setMarkers] = React.useState([]);\n  const handleClick = ({ lngLat: [longitude, latitude] }) =>\n    setMarkers(markers => [...markers, { longitude, latitude }]);\nconst icon = L.icon({\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40],\n  iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\n});\n  /**\n   * Manage viewport in state\n   */\n  const [viewport, setViewport] = React.useState({\n    latitude: 51,\n    longitude: 19,\n    zoom: 5,\n  });\n\n  return (\n    <InteractiveMap\n      // onClick, capture the pointer event so we can\n      // get the lngLat of the click.\n      onClick={handleClick}\n      // required for interactivity\n      \n      mapStyle=\"mapbox://styles/ebredla/ckckctgmr4u571jo5628ll2gq\"\n      width=\"100vw\"\n      height=\"100vh\"\n      mapboxApiAccessToken=\"pk.eyJ1IjoiZWJyZWRsYSIsImEiOiJjam5jeTJtenUwMjYwM3BvNGUyNW1jZWdhIn0.-tQzgIVEIdLKqbTKsy4NXg\"\n      \n      onViewportChange={viewport => setViewport(viewport)}\n      {...viewport}\n    >\n      {markers.length\n        ? markers.map((m, i) => (\n            // <Marker /> just places its children at the right lat lng.\n            <Marker {...m} key={i} icon={icon}>\n              {`Clicked here: \\n ${m.longitude}, ${m.latitude}`}\n            </Marker>\n          ))\n        : null}\n    </InteractiveMap>\n  );\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}