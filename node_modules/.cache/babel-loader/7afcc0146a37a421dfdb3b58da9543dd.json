{"ast":null,"code":"var _jsxFileName = \"/home/edyta/react/onClickMarker/map-app/src/map.js\";\nimport React from 'react';\nimport './App.css';\nimport InteractiveMap, { Marker } from \"react-map-gl\";\nconst [markers, setMarkers] = React.useState([]);\n\nconst handleClick = ({\n  lngLat: [longitude, latitude]\n}) => setMarkers(markers => [...markers, {\n  longitude,\n  latitude\n}]);\n\nconst [viewport, setViewport] = React.useState({\n  latitude: 52,\n  longitude: 21,\n  zoom: 5,\n  pitch: 40,\n  bearing: 0\n});\n\nclass Maps extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(InteractiveMap // onClick, capture the pointer event so we can\n    // get the lngLat of the click.\n    , Object.assign({\n      onClick: handleClick // required for interactivity\n      ,\n      width: \"100vw\",\n      height: \"100vh\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoiZ2lzZmVlZGJhY2siLCJhIjoiY2l2eDJndmtjMDFkeTJvcHM4YTNheXZtNyJ9.-HNJNch_WwLIAifPgzW2Ig\",\n      onViewportChange: viewport => setViewport(viewport)\n    }, viewport, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }), markers.length ? markers.map((m, i) =>\n    /*#__PURE__*/\n    // <Marker /> just places its children at the right lat lng.\n    React.createElement(Marker, Object.assign({}, m, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), `Clicked here: \\n ${m.longitude}, ${m.latitude}`)) : null);\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["/home/edyta/react/onClickMarker/map-app/src/map.js"],"names":["React","InteractiveMap","Marker","markers","setMarkers","useState","handleClick","lngLat","longitude","latitude","viewport","setViewport","zoom","pitch","bearing","Maps","Component","render","length","map","m","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,IAAyBC,MAAzB,QAAuC,cAAvC;AAMA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA9B;;AACE,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE,CAACC,SAAD,EAAYC,QAAZ;AAAV,CAAD,KAClBL,UAAU,CAACD,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAa;AAAEK,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,CAAZ,CADZ;;AAEF,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACK,QAAN,CAAe;AAC7CI,EAAAA,QAAQ,EAAE,EADmC;AAE7CD,EAAAA,SAAS,EAAE,EAFkC;AAG7CI,EAAAA,IAAI,EAAE,CAHuC;AAI7CC,EAAAA,KAAK,EAAE,EAJsC;AAK7CC,EAAAA,OAAO,EAAE;AALoC,CAAf,CAAhC;;AAOA,MAAMC,IAAN,SAAmBf,KAAK,CAACgB,SAAzB,CAAmC;AAE3BC,EAAAA,MAAM,GAAG;AACL,wBAEE,oBAAC,cAAD,CACA;AACA;AAFA;AAGA,MAAA,OAAO,EAAEX,WAHT,CAIA;AAJA;AAKA,MAAA,KAAK,EAAC,OALN;AAMA,MAAA,MAAM,EAAC,OANP;AAOA,MAAA,oBAAoB,EAAC,gGAPrB;AAQA,MAAA,gBAAgB,EAAEI,QAAQ,IAAIC,WAAW,CAACD,QAAD;AARzC,OASIA,QATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWCP,OAAO,CAACe,MAAR,GACGf,OAAO,CAACgB,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ;AAAA;AACV;AACA,wBAAC,MAAD,oBAAYD,CAAZ;AAAe,MAAA,GAAG,EAAEC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAmBD,CAAC,CAACZ,SAAU,KAAIY,CAAC,CAACX,QAAS,EADlD,CAFF,CADH,GAOG,IAlBJ,CAFF;AAuBF;;AA1ByB;;AA8B/B,eAAeM,IAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport InteractiveMap, { Marker } from \"react-map-gl\";\n\n\n\n\n\nconst [markers, setMarkers] = React.useState([]);\n  const handleClick = ({ lngLat: [longitude, latitude] }) =>\n    setMarkers(markers => [...markers, { longitude, latitude }]);\nconst [viewport, setViewport] = React.useState({\n  latitude: 52,\n  longitude: 21,\n  zoom: 5,\n  pitch: 40,\n  bearing: 0\n});\nclass Maps extends React.Component {\n\n        render() {\n            return (\n\n              <InteractiveMap\n              // onClick, capture the pointer event so we can\n              // get the lngLat of the click.\n              onClick={handleClick}\n              // required for interactivity\n              width=\"100vw\"\n              height=\"100vh\"\n              mapboxApiAccessToken=\"pk.eyJ1IjoiZ2lzZmVlZGJhY2siLCJhIjoiY2l2eDJndmtjMDFkeTJvcHM4YTNheXZtNyJ9.-HNJNch_WwLIAifPgzW2Ig\"\n              onViewportChange={viewport => setViewport(viewport)}\n              {...viewport}\n            >\n              {markers.length\n                ? markers.map((m, i) => (\n                    // <Marker /> just places its children at the right lat lng.\n                    <Marker {...m} key={i}>\n                      {`Clicked here: \\n ${m.longitude}, ${m.latitude}`}\n                    </Marker>\n                  ))\n                : null}\n            </InteractiveMap>\n                );\n         }\n     }\n\n\n    export default Maps;\n"]},"metadata":{},"sourceType":"module"}